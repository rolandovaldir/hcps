# config/doctrine/schema.yml
---
actAs:
  Signable:
    created:
      name: created_by
      type: integer
      onUpdate: CASCADE
      onDelete: SET NULL
      options:
        notnull: true
        default: 1
    updated:
      name: updated_by
      type: integer

## estructuras que ya estan creadas para otros sistemas existentes

Afiliado:
  actAs: [Timestampable]
  columns:  
    matricula:  { type: string(12), notnull: true }      
    paterno:    { type: string(20) } 
    materno:    { type: string(20) } 
    nombre:     { type: string(12), notnull: true } 
    hclinica:   { type: string(12), notnull: true } 
    empresa:    { type: string(255), notnull: true } 
    tafiliado:  { type: string(12), notnull: true } 
    activo:     { type: string(1), notnull: true, default: 1 } 
    grupofam:   { type: string(1), notnull: true, default: 1 } 

PacienteOtroseguro:
  actAs: [Timestampable]
  columns:      
    nombre:           { type: string(50), notnull: true }
    paterno:          { type: string(50), notnull: true }
    materno:          { type: string(50), notnull: true }
    casada:           { type: string(50) }
    fechaNacimiento:  { type: date, notnull: true }
    sexo:             { type: string(10), notnull: true }
    ci:               { type: string(20), notnull: true, unique: true }
    exp:              { type: string(10), notnull: true }
    domicilio:        { type: string(150), notnull: true }
    telefono:         { type: string(50) }
    celular:          { type: string(50) } 
    email:            { type: string(70) }
    hclinica:         { type: string(12), notnull: true }    
    ocupacion:        { type: string(45) }
    departamento:     { type: string(45) }
    ciudad:           { type: string(45) }
    provincia:        { type: string(45) }
    
Internado:
  actAs: [Timestampable]  
  columns:     
    afiliado_id:             { type: integer, notnull: false }
    noAfiliado_id:           { type: integer, notnull: false }
    categoria_id:            { type: integer, notnull: true }
    cama_id:                 { type: integer, notnull: false }
    medico_id:               { type: integer, notnull: true }
    medico_consulta_id:      { type: integer, notnull: true }
    medico_referencia_id:    { type: integer, notnull: true }
    formulario_referencia:   { type: string(200) }
    diagnostico:             { type: string(10000) }
    procedencia:             { type: string(500) }
    medio_referencia:        { type: string(200) }
    observaciones:           { type: string(1000) }
    fecha:                   { type: date, notnull: false }
    hora:                    { type: time, notnull: false }     
    conducto:                { type: string(1000) }
    #tipo_seguro:             {type: varchar(200)}
    es_afiliado:             { type: boolean, default: true }
    # para la parte del egreso
    alta:                    { type: boolean, default: false }
    altaFecha:               { type: date, notnull: true }
    altaHora:                { type: time, notnull: true }
    diagnostico_alta:        { type: string(1000), notnull: false }
    tratamientio:            { type: string(200), notnull: true }
    lugar_referencia_salida: { type: string(200), notnull: true }
    medio_referencia_salida: { type: string(200), notnull: true }
    motivo_refe_retorno:     { type: string(200), notnull: true }    
  relations: 
    Afiliado:                    {local: afiliado_id, foreign: id, type: one, foreignAlias: Internaciones }      
    PacienteOtroseguro:          {local: noAfiliado_id, foreign: id, type: one, foreignAlias: Internaciones }      
    OrdenMedica:                 {local: id, foreign: internado_id, type: many, foreignAlias: Internado}
    ServicioMantenimiento:       {local: id, foreign: internado_id, type: many, foreignAlias: Internado}
    JuntaMedica:                 {local: id, foreign: internado_id, type: many, foreignAlias: Internado}
    ExamenFisicoRecienNacido:    {local: id, foreign: internado_id, type: many, foreignAlias: Internado}
    SolicitudInterconsulta:      {local: id, foreign: internado_id, type: many, foreignAlias: Internado}
    SolicitudServicio:           {local: id, foreign: internado_id, type: many, foreignAlias: Internado}    
    SolicitudReposicionMaterial: {local: id, foreign: internado_id, type: many, foreignAlias: Internado}
    SignosVitalesNursery:        {local: id, foreign: internado_id, type: many, foreignAlias: Internado}
    NotasEnfermeria:             {local: id, foreign: internado_id, type: many, foreignAlias: Internado}
    NotasEvolucion:              {local: id, foreign: internado_id, type: many, foreignAlias: Internado}
      
Empleado:
  actAs: [Timestampable]  
  columns:
    matricula:        { type: string(20), notnull: true }    
    profesion:        { type: string(200), notnull: true }    
    centro_salud_id:  { type: integer, notnull: true}
    nombre:           { type: string(45), notnull: true }    
    apellido:         { type: string(45), notnull: true }    
    cargo:            { type: string(45), notnull: true }
  indexes:
    empleado_unique1:
      type:   unique
      fields: matricula
  relations:  
    Filial:    { local: centro_salud_id, foreign: id, type: one, foreignAlias: Empleados }
    
Especialidad:     
  actAs: [Timestampable]  
  columns:
    nombre:       { type: string(50), notnull: true }      
    activo:       { type: string(1), notnull: true, default: 1 }
    cupos:        { type: integer }
    servicio_id:  { type: integer, notnull: true }
    filial_id:    { type: integer }
    observacion:  { type: string(2000)}    
    
Medico:    
  actAs: [Timestampable]  
  columns:
    codigo:           { type: string(8), notnull: true }    
    nombrec:          { type: string(100), notnull: true }    
    cargahor:         { type: integer, notnull: true, default: 0 }
    hor_ini:          { type: string(5), notnull: true }    
    hor_fin:          { type: string(5), notnull: true }    
    intervalo:        { type: integer, notnull: true }    
    activo:           { type: string(1), notnull: true, default: 1 }
    cupos:            { type: integer, length: 3 }
    consultorio:      { type: string(30), default: null }
    observacion:      { type: string(2000) }      
    especialidad_id:  { type: integer, notnull: true }
    item_id:          { type: integer, notnull: true }    
  relations:  
    Especialidad:     { local: especialidad_id, foreign: id, type: one, foreignAlias: Medicos }
  indexes:
    medico_unique1:
      type: unique
      fields: codigo
    
Filial:
  actAs: [Timestampable]  
  columns:  
    nombre:         { type: string(100), notnull: true }
    direccion:      { type: string(250), notnull: true }
    telefono:       { type: string(10) }
    telefono2:      { type: string(10) }
    telefono3:      { type: string(10) }
    descripcion:    { type: string(250) }
    codigo:         { type: string(10) }
    geoubicacion:   { type: string(600) }
    geoubicacion2:  { type: string(600) }

Planta:
  actAs: [Timestampable]  
  columns:
    filial_id:     { type: integer, notnull: true }
    nombre:        { type: string(100) }
    descripcion:   { type: string(200) }
    observaciones: { type: string(250) }
    codigo:        { type: string(10) }
    plano:         { type: string(100) }
    numero:        { type: integer, length: 3 }
  relations:  
    Filial:    { local: filial_id, foreign: id, type: one, foreignAlias: Plantas }

Pieza:
  actAs: [Timestampable]  
  columns:    
    planta_id:     { type: integer, notnull: true }
    nombre:        { type: string(100) }
    codigo:        { type: string(10) }
    descripcion:   { type: string(250) }
    observaciones: { type: string(250) }
    plano:         { type: string(200) }
  relations:  
    Planta:    { local: planta_id, foreign: id, type: one, foreignAlias: Piezas }  

Cama:
  actAs: [Timestampable]  
  columns:
    pieza_id:      { type: integer, notnull: true }
    codigo:        { type: string(4), notnull: true }
    ocupada:       { type: boolean, default: false }
    observaciones: { type: string(250) }
    codigo_activo: { type: string(16) }
    activo_id:     { type: integer, length: 2, notnull: false }
  relations:  
    Pieza:    { local: pieza_id, foreign: id, type: one, foreignAlias: Camas }
    
#FileInternacion:
#  actAs: [Timestampable]
#  columns:
#    internado_id: { type: integer }
#  relations:
#    Internado:                {local: internado_id, foreign: id, type: one, foreignAlias: FileInternacion } 
    
#--------------------------------------------------------

OrdenMedica:
  actAs: [Timestampable]
  columns:
    internado_id:                  {type: integer, notnull: true}
    via_administracion_id:         {type: integer, notnull: true}
    fecha_hora:                    {type: timestamp}
    nombre_medicamento_indicacion: {type: string(150)}
    dosis_intervalo:               {type: string(150)}
    fecha_inicio:                  {type: date}
    fecha_terminacion:             {type: date}
  relations:  
    Internado:          {local: internado_id, foreign: id, type: one, foreignAlias: Ordenes} 
    ViaAdministracion:  {local: via_administracion_id, foreign: id, type: one, foreignAlias: Ordenes}
    
ViaAdministracion:
  actAs: [Timestampable]
  columns:
    nombre: {type: string(100)}
  relations:
    OrdenMedica: {local: id, foreign: via_administracion_id, type: many, foreignAlias: Administracion}

#--------------------------------------------------------

ServicioMantenimiento:
  actAs: [Timestampable]
  columns:
    internado_id:        {type: integer, notnull: true}
    solicitante:         {type: string(80)}
    sector:              {type: string(50)}
    fecha_solicitante:   {type: date}
    objeto_reparado:     {type: string(100)}
    caracteristicas:     {type: string(250)}
    trabajo_solicitado:  {type: string(2000)}
    conformidad:         {type: string(250)}
    reparado_por:        {type: string(150)}
    importe :            {type: integer}
    importe_fecha:       {type: date}
  relations:
    Internado: {local: internado_id, foreign: id, type: one, foreignAlias: Mantenimientos}

#--------------------------------------------------------

JuntaMedica:
  actAs: [Timestampable]
  columns:
    internado_id:     {type: integer, notnull: true}
    medico_solicitante:      {type: string(100)}
    servicio:                {type: string(45)}
    especialidades:          {type: string(45)}
    fecha_junta:             {type: date}
    diagnostico_establecido: {type: string(2000)}
    relacion_junta:          {type: string(2500)}
    conclusiones:            {type: string(2000)}
    tac:                     {type: boolean}
    contraste:               {type: boolean}
  relations:
    Internado:        {local: internado_id, foreign: id, type: one, foreignAlias: Juntas}
    MedicoParticipante: {local: id, foreign: junta_medica_id, type: many ,foreignAlias: Junta}
    
MedicoParticipante:
  actAs: [Timestampable]
  columns:
    junta_medica_id: {type: integer, notnull: true}
    nombre:          {type: string(150)}
    especialidad:    {type: string(100)}
    cargo:           {type: string(50)}
  relations:
    JuntaMedica: {local: junta_medica_id, foreign: id, type: one, foreignAlias: Participantes}
 
#--------------------------------------------------------
    
ExamenFisicoRecienNacido:
  actAs: [Timestampable]
  columns:
    internado_id:         {type: integer, notnull: true}
    ap_paterno:           {type: string(45)}
    ap_materno:           {type: string(45)}
    fecha_nacimiento:     {type: date}
    sexo:                 {type: string(20)}
    peso_nacimiento:      {type: string(45)}
    talla:                {type: string(45)}
    circunferencia_torax: {type: string(20)}
    numero_cuna:          {type: integer}
    fecha_adminision:     {type: date}
    fecha_egreso:         {type: date}
  relations:
    Internado: {local: internado_id, foreign: id, type: one, foreignAlias: RecienNacidos}
    Apgar:     {local: id, foreign: examen_fisico_recien_nacido_id, type: many, foreignAlias: RecienNacido}
    
Apgar:
  actAs: [Timestampable]
  columns:
    examen_fisico_recien_nacido_id: {type: integer, notnull: true}
    nacer_egresar:                  {type: boolean}
    apariencia:                     {type: string(100)}
    piel:                           {type: string(100)}
    cabeza:                         {type: string(100)}
    ojos:                           {type: string(100)}
    oidos_nariz_garganta:           {type: string(100)}
    torax:                          {type: string(100)}
    pulmones:                       {type: string(100)}
    corazon:                        {type: string(100)}
    abdomen:                        {type: string(100)}
    genitales:                      {type: string(100)}
    torso_espina:                   {type: string(100)}
    extremidades:                   {type: string(100)}
    reflejos:                       {type: string(100)}
    ano:                            {type: string(100)}
  relations:
    ExamenFisicoRecienNacido: {local: examen_fisico_recien_nacido_id, foreign: id, type: one, foreignAlias: Apgars}

#--------------------------------------------------------

SolicitudInterconsulta:
  actAs: [Timestampable]
  columns:
    internado_id:    {type: integer, notnull: true}
    dirigida_a:      {type: string(50)}
    especialidad:    {type: string(50)}
    motivo:          {type: string(2000)}
    datos_clinicos:  {type: string(2000)}
    informe_medico:  {type: string(2500)}
    conclusiones:    {type: string(2500)}
    hora_solicitud:  {type: time}
    fecha_solicitud: {type: date}
  relations:
    Internado:         {local: internado_id, foreign: id, type: one, foreignAlias: Interconsultas}
    DetalleMedicacion: {local: id, foreign: solicitud_intercosultada_id, type: many, foreignAlias: Interconsulta}
    
DetalleMedicacion:
  actAs: [Timestampable]
  columns:
    solicitud_intercosultada_id: {type: integer, notnull: true}
    medicacion_utilizada:        {type: string(150)}
    dosis:                       {type: string(45)}
    fecha_inicio:                {type: date}
  relations:
    SolicitudInterconsulta: {local: solicitud_intercosultada_id, foreign: id, type: one, foreignAlias: Medicaciones}
    
#--------------------------------------------------------

SolicitudServicio:
  actAs: [Timestampable]
  columns:
    internado_id:           {type: integer, notnull: true}
    atencion_id:            {type: integer, notnull: true}
    para:                   {type: string(2000)}
    diagnostico_presuncion: {type: string(250)}
    material_utilizado:     {type: string(2000)}
  relations:
    Internado: {local: internado_id, foreign: id, type: one, foreignAlias: SolicitudServicios}
    Atencion:  {local: atencion_id, foreign: id, type: one, foreignAlias: SolicitudServicios}

Atencion:
  actAs: [Timestampable]
  columns:
    nombre: {type: string(100)}
  relations:
    SolicitudServicio: {local: id, foreign: atencion_id, type: many, foreignAlias: Atencion}
#--------------------------------------------------------

SolicitudReposicionMaterial:
  actAs: [Timestampable]
  columns:
    internado_id: {type: integer, notnull: true}
    unidad:       {type: string(100)}
    encargado:    {type: string(150)}
  relations:
    Internado:       {local: internado_id, foreign: id, type: one, foreignAlias: SolicitudMateriales}
    DetalleMaterial: {local: id, foreign: solicitud_reposicion_material_id, type: many, foreignAlias: SolicitudMaterial}

DetalleMaterial:
  actAs: [Timestampable]
  columns:
    solicitud_reposicion_material_id: {type: integer, notnull: true}
    codigo:                           {type: string(45)}
    descripcion:                      {type: string(100)}
    unidad:                           {type: integer}
    saldo_anterior:                   {type: integer}
    reposicion_solicitada:            {type: integer}
    saldo_actual:                     {type: integer}
  relations:
    SolicitudReposicionMaterial: {local: solicitud_reposicion_material_id, foreign: id, type: one,foreignAlias: Materiales}

#--------------------------------------------------------

SignosVitalesNursery:
  actAs: [Timestampable]
  columns:
    internado_id:  {type: integer, notnull: true}
    fecha:         {type: date}
    hora:          {type: time}
    fc_nursery:    {type: string(45)}
    fr_nursery:    {type: string(45)}
    to_nursery:    {type: string(45)}
    diu_nursery:   {type: string(45)}
    cat_nursery:   {type: string(45)}
    lm_nursery:    {type: string(45)}
    residuo:       {type: string(45)}
    observaciones: {type: string(45)}
  relations:
    Internado: {local: internado_id, foreign: id, type: one, foreignAlias: Nurserys}

#--------------------------------------------------------

NotasEnfermeria:
  actAs: [Timestampable]
  columns:
    internado_id:  {type: integer, notnull: true}
    fecha:          {type: date}
    hora:           {type: time}
    procedimientos: {type: string(150)}
    observaciones:  {type: string(500)}
  relations:
    Internado:   {local: internado_id, foreign: id, type: one, foreignAlias: Enfermerias}

#--------------------------------------------------------

NotasEvolucion:
  actAs: [Timestampable]
  columns:
    internado_id: {type: integer, notnull: true}
    fecha_hora:   {type: timestamp}
    numero_prob:  {type: integer}
    nota_soap:    {type: string(1500)}
  relations:
    Internado:  {local: internado_id, foreign: id, type: one, foreignAlias: Evoluciones}

#--------------------------------------------------------

# guillermo
AutorizacionDiagnosticoTratamiento:
  actAs: [Timestampable]  
  columns:     
    internado_id:        { type: integer , notnull: true }
    nombre_familiar:        { type: string(200) }
    ci_familiar:         { type: string(10) }
    fecha_hora:          { type: timestamp }  
  relations: 
    Internado: { local: internado_id, foreign: id, type: one, foreignAlias: AutorizacionesTratamiento }
  
# guillermo  
AutorizacionAltaSolicitada:
  actAs: [Timestampable]
  columns:     
    internado_id:          { type: integer , notnull: true }
    nombre_familiar:       { type: string(100) }
    ci_familiar:           { type: string(10) } 
    fecha_hora:            { type: timestamp }
  relations: 
    Internado: { local: internado_id, foreign: id, type: one, foreignAlias: AutorizacionesAltaSolicitada }

# guillermo
AutorizacionAutopsia:
  actAs: [Timestampable]  
  columns:     
    internado_id:          { type: integer , notnull: true }
    nombre_familiar1:      { type: string(100) }
    tipo_parentesco1:      { type: string(30) }
    ci_familiar1:          { type: string(10) } 
    nombre_familiar2:      { type: string(100) }
    tipo_parentesco2:      { type: string(30) }
    ci_familiar2:          { type: string(10) } 
    nombre_familiar3:      { type: string(100) }
    tipo_parentesco3:      { type: string(30) }
    ci_familiar3:          { type: string(10) } 
    fecha_hora:            { type: timestamp }
  relations:
    Internado: { local: internado_id, foreign: id, type: one, foreignAlias: AutorizacionesAutopsia }

# guillermo
ProgramacionCirugia:
  actAs: [Timestampable]  
  columns:     
    internado_id:                { type: integer , notnull: true }
    medico_id:                   { type: integer }
    operacion_fecha:             { type: date }
    operacion_hora:              { type: time }
    diagnostico_preoperatorio:   { type: string(250) }
    tratamiento_quirurgico:      { type: string(250) } 
    anestesia:                   { type: string(150) }
    otros:                       { type: string(150) } 
    examenes_auxiliares:         { type: string(1) }
    fecha:                       { type: date }
    enfermera_id:                { type: integer }
    enviado:                     { type: string(80) } 
    recibido:                    { type: string(80) } 
  relations:
    Internado: { local: internado_id, foreign: id, type: one, foreignAlias: ProgracionesCirugia }

# guillermo
SolicitudExamenLaboratorio:
  actAs: [Timestampable]  
  columns:     
    internado_id:             { type: integer, notnull: true }
    doctor_id:                { type: integer }
    material_enviado:         { type: string(45) } 
    otros_examenes:           { type: string(45) }
    diagnostico_presuntivo:   { type: string(45) }
    medico_id:                { type: integer }
    lugar:                    { type: string(45) }
    fecha:                    { type: date } 
  relations:
    Internado: { local: internado_id, foreign: id, type: one, foreignAlias: SolicitudesExamenLaboratorio }

# guillermo
DetalleSolicitudExamenLaboratorio:
  actAs: [Timestampable]
  columns:     
    solicitud_examen_laboratorio_id:  { type: integer, notnull: true }
    tipo:                             { type: integer }
  relations:
    SolicitudExamenLaboratorio: { local: solicitud_examen_laboratorio_id, foreign: id, type: one, foreignAlias: DetallesSolicitudExamenLaboratorio }

# guillermo
#AdministracionMedicamento:
#  actAs: [Timestampable]  
#  columns:     
#    internado_id:         { type: integer, notnull: true }    
#  relations:
#    Internado: { local: internado_id, foreign: id, type: one, foreignAlias: AdministracionesMedicamento }

# guillermo
AdministracionMedicamento:
  actAs: [Timestampable]  
  columns:     
    internado_id:               { type: integer, notnull: true }
    enfermera_id:               { type: integer }
    medicamento_solucion:       { type: string(400), notnull: true }
    tipo:                       { type: string(1), notnull: true }
    fecha:                      { type: date , notnull: true }
    horario:                    { type: time , notnull: true }
  relations:
    Internado: { local: internado_id, foreign: id, type: one, foreignAlias: AdministracionesMedicamento }
#    AdministracionMedicamento: { local: administracion_medicamento_id, foreign: id, type: one, foreignAlias: DetallesAdminMedicamento }

# guillermo
ResumenAlta:
  actAs: [Timestampable]  
  columns:     
    internado_id:              { type: integer, notnull: true }
    medico_id:                 { type: integer }
    servicio:                  { type: string(50) }
    servicio_egreso:           { type: string(50) }
    diagnostico_provisional:   { type: string(2000) }
    diagnostico_definitivo:    { type: string(2000) }
    operaciones:               { type: string(2000) }
    anamnesis_examfisico:      { type: string(2000) }
    hallazgos_lab_rayx:        { type: string(2000) }
    evolucion_complicacion:    { type: string(2000) }
    cond_trat_ref_pronostico:  { type: string(2000) }
    fecha:                     { type: date }
  relations:
    Internado: { local: internado_id, foreign: id, type: one, foreignAlias: ResumenesAlta }

# guillermo
UsoHospitalario:
  actAs: [Timestampable]  
  columns:     
    internado_id:           { type: integer, notnull: true }    
    medico_id:              { type: integer }
    lugar:                  { type: string(60) }
    codigo:                 { type: string(45) }
    especialidad:           { type: string(45) }
  relations:
    Internado: { local: internado_id, foreign: id, type: one, foreignAlias: ResumenesAlta }

# guillermo
DetalleUsoHospitalario:
  actAs: [Timestampable]  
  columns:     
    uso_hospitalario_id:    { type: integer, notnull: true }
    codigo_cbm:             { type: string(40) }
    detalle:                { type: string(150) }    
    cantidad:               { type: string(10) }
    unidad:                 { type: string(20) }
    cod_farmacia_ibm:       { type: string(25) }
  relations:
    UsoHospitalario: { local: uso_hospitalario_id, foreign: id, type: one, foreignAlias: DetallesUsoHospitalario }
      
# guillermo    
AtencionEnfermeria:
  actAs: [Timestampable]  
  columns:     
    internado_id:                           { type: integer }    
    enfermera_id:                           { type: integer }
    lugar:                                  { type: string(60) }
    codigo:                                 { type: string(45) }
    especialidad:                           { type: string(45) }
    per_apariencia_gral_esc:                { type: string(1) }
    per_apariencia_gral_val:                { type: string(150) }
    per_habitos_esc:                        { type: string(1) }
    per_habitos_val:                        { type: string(150) }    
    per_alergias_esc:                       { type: string(1) }
    per_alergias_val:                       { type: string(150) }
    per_inmunizaciones_esc:                 { type: string(1) }
    per_inmunizaciones_val:                 { type: string(150) }
    per_medicacion_actual_esc:              { type: string(1) }
    per_medicacion_actual_val:              { type: string(150) }
    motivo_ingreso:                         { type: string(800) }
    nutmet_higiene_esc:                     { type: string(1) }
    nutmet_higiene_val:                     { type: string(150) }
    nutmet_estado_nutricional_esc:          { type: string(1) }
    nutmet_estado_nutricional_val:          { type: string(150) }
    nutmet_protesis_dental_esc:             { type: string(1) }
    nutmet_protesis_dental_val:             { type: string(150) }
    nutmet_liquidos_electrolitos_esc:       { type: string(1) }
    nutmet_liquidos_electrolitos_val:       { type: string(150) }
    patelim_habito_intestinal_esc:          { type: string(1) }
    patelim_habito_intestinal_val:          { type: string(150) }
    patelim_habito_urinario_esc:            { type: string(1) }  
    patelim_habito_urinario_val:            { type: string(150) }
    acteje_valoracion_cardiopulmonar_esc:   { type: string(1) }
    acteje_valoracion_cardiopulmonar_val:   { type: string(150) }
    acteje_capacidad_motora_esc:            { type: string(1) }
    acteje_capacidad_motora_val:            { type: string(150) }
    acteje_act_diversion_esc:               { type: string(1) }
    acteje_act_diversion_val:               { type: string(150) }
    acteje_deficit_autocuidado_esc:         { type: string(1) }
    acteje_deficit_autocuidado_val:         { type: string(150) }
    acteje_crecim_desarrollo_esc:           { type: string(1) }
    acteje_crecim_desarrollo_val:           { type: string(150) }
    des_habito_descanso_esc:                { type: string(1) }
    des_habito_descanso_val:                { type: string(150) }
    des_transtorno_sueno_esc:               { type: string(1) }
    des_transtorno_sueno_val:               { type: string(150) }
    cogper_alter_sensoriales_esc:           { type: string(1) }
    cogper_alter_sensoriales_val:           { type: string(150) }
    cogper_nivel_conciencia_esc:            { type: string(1) }
    cogper_nivel_conciencia_val:            { type: string(150) }
    cogper_alteracion_promentales_esc:      { type: string(1) }
    cogper_alteracion_promentales_val:      { type: string(150) }
    auto_reaccion_emocional_esc:            { type: string(1) }
    auto_reaccion_emocional_val:            { type: string(150) }
    relrol_relacion_interpersonal_esc:      { type: string(1) }
    relrol_relacion_interpersonal_val:      { type: string(150) }
    relrol_conducta_familia_esc:            { type: string(1) }
    relrol_conducta_familia_val:            { type: string(150) }
    relrol_cambio_personalfamiliar_esc:     { type: string(1) }
    relrol_cambio_personalfamiliar_val:     { type: string(150) }
    repsex_alteracion_sisreproductivo_esc:  { type: string(1) }
    repsex_alteracion_sisreproductivo_val:  { type: string(150) }
    capstr_relpaciente_enfermedad_esc:      { type: string(1) }
    capstr_relpaciente_enfermedad_val:      { type: string(150) }
    creencia_religiosa:                     { type: string(80) }
    diagnostico_enfermera:                  { type: string(2500) }
  relations:
    Internado: { local: internado_id, foreign: id, type: one, foreignAlias: AtencionesEnfermeria }

# guillermo
ListaDieta:
  actAs: [Timestampable]  
  columns:
    internado_id:          { type: integer }
    enfermera_id:          { type: integer }
    servicio_id:           { type: integer }
    fecha:                 { type: date }
    observacion:           { type: string(500) }
  relations:
    Internado: { local: internado_id, foreign: id, type: one, foreignAlias: ListasDieta }

# guillermo
DetalleListaDieta:
  actAs: [Timestampable]  
  columns:     
    lista_dieta_id:        { type: integer }
    internado_id:          { type: integer }
    dieta:                 { type: string(250) }    
    diagnostico:           { type: string(150) }
  relations:
    Internado:         { local: internado_id, foreign: id, type: one, foreignAlias: DetallesListaDieta }
    ListaDieta:        { local: lista_dieta_id, foreign: id, type: one, foreignAlias: DetallesListaDieta }

# guillermo
SolicitudTransfusionSanguinea:
  actAs: [Timestampable]  
  columns:     
    internado_id:                 { type: integer }
    quirofano:                    { type: string(50) }
    requiere_transfusion_de:      { type: string(1) }    
    cumplirse_enforma:            { type: string(1) }
    fecha_prog_quirurgica:        { type: date }
    hora_prog_quirurgica:         { type: time }
    quirofano_prog_quirurgica:    { type: string(10) }    
    cantidad_requerida:           { type: integer, length: 4 }
    cantidad_requerida_unidad:    { type: string(10) }
    observaciones:                { type: string(200) }
    fecha_solicitud:              { type: date }
    hora_solicitud:               { type: time }
    medico_id:                    { type: integer }
    numero:                       { type: string(45) }
    fecha_recepcion_solicitud:    { type: date }
    bolsa_compatible1:            { type: string(10) }
    bolsa_compatible2:            { type: string(10) }
    bolsa_compatible3:            { type: string(10) }
    bolsa_compatible4:            { type: string(10) }
    bolsa_compatible5:            { type: string(10) }
    grupo_sanguineo_receptor:     { type: string(10) }
    hr_receptor:                  { type: string(10) }
    anticuerpos_irreg:            { type: string(25) }
    nombre_res_bancosangre:       { type: string(80) }
  relations:
    Internado: { local: internado_id, foreign: id, type: one, foreignAlias: SolicitudesTransfusionSanguinea }

# guillermo
InformeEstadisticoAdmEgreso:
  actAs: [Timestampable]  
  columns:     
    internado_id:               { type: integer }
    urgencia_persona_ref:       { type: string(150) }    
    urgencia_direccion_calle:   { type: string(70) }
    urgencia_direccion_no:      { type: string(10) }
    urgencia_direccion_fono:    { type: string(20) }
  relations:
    Internado: { local: internado_id, foreign: id, type: one, foreignAlias: InformesEstadisticoAdmEgreso }

# guillermo
PapeletaPedidoMaterial:
  actAs: [Timestampable]  
  columns:
    internado_id:          { type: integer }
    enfermera_id:          { type: integer }
    fecha_solicitud:       { type: date }    
    numero:                { type: string(15) }
    detalle:               { type: string(150) }
    cantidad:              { type: string(25) }
    entregado:             { type: boolean }
  relations:
    Internado: { local: internado_id, foreign: id, type: one, foreignAlias: PapeletasPedidoMaterial }