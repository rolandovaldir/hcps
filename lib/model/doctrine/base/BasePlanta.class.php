<?php

/**
 * BasePlanta
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $filial_id
 * @property string $nombre
 * @property string $descripcion
 * @property string $observaciones
 * @property string $codigo
 * @property string $plano
 * @property integer $numero
 * @property Filial $Filial
 * @property Pieza $Pieza
 * @property Doctrine_Collection $Usuarios
 * 
 * @method integer             getFilialId()      Returns the current record's "filial_id" value
 * @method string              getNombre()        Returns the current record's "nombre" value
 * @method string              getDescripcion()   Returns the current record's "descripcion" value
 * @method string              getObservaciones() Returns the current record's "observaciones" value
 * @method string              getCodigo()        Returns the current record's "codigo" value
 * @method string              getPlano()         Returns the current record's "plano" value
 * @method integer             getNumero()        Returns the current record's "numero" value
 * @method Filial              getFilial()        Returns the current record's "Filial" value
 * @method Pieza               getPieza()         Returns the current record's "Pieza" value
 * @method Doctrine_Collection getUsuarios()      Returns the current record's "Usuarios" collection
 * @method Planta              setFilialId()      Sets the current record's "filial_id" value
 * @method Planta              setNombre()        Sets the current record's "nombre" value
 * @method Planta              setDescripcion()   Sets the current record's "descripcion" value
 * @method Planta              setObservaciones() Sets the current record's "observaciones" value
 * @method Planta              setCodigo()        Sets the current record's "codigo" value
 * @method Planta              setPlano()         Sets the current record's "plano" value
 * @method Planta              setNumero()        Sets the current record's "numero" value
 * @method Planta              setFilial()        Sets the current record's "Filial" value
 * @method Planta              setPieza()         Sets the current record's "Pieza" value
 * @method Planta              setUsuarios()      Sets the current record's "Usuarios" collection
 * 
 * @package    hcps
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BasePlanta extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('planta');
        $this->hasColumn('filial_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('nombre', 'string', 100, array(
             'type' => 'string',
             'length' => 100,
             ));
        $this->hasColumn('descripcion', 'string', 200, array(
             'type' => 'string',
             'length' => 200,
             ));
        $this->hasColumn('observaciones', 'string', 250, array(
             'type' => 'string',
             'length' => 250,
             ));
        $this->hasColumn('codigo', 'string', 10, array(
             'type' => 'string',
             'length' => 10,
             ));
        $this->hasColumn('plano', 'string', 100, array(
             'type' => 'string',
             'length' => 100,
             ));
        $this->hasColumn('numero', 'integer', 3, array(
             'type' => 'integer',
             'length' => 3,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Filial', array(
             'local' => 'filial_id',
             'foreign' => 'id'));

        $this->hasOne('Pieza', array(
             'local' => 'id',
             'foreign' => 'planta_id'));

        $this->hasMany('sfGuardUser as Usuarios', array(
             'local' => 'id',
             'foreign' => 'planta_id'));

        $timestampable0 = new Doctrine_Template_Timestampable(array(
             ));
        $this->actAs($timestampable0);
    }
}